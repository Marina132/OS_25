Работа с pipe. Часть 1

Для работы с пайпом можно воспользоваться системными вызовами write() для записи и read() для чтения аналогично тому как это делалось для записи в фаул и чтения из файла. Различия в том, что при чтении из файла информация не исчезает, а байт, прочитанный из пайпа удаляется.
Для создания используется системный вызов pipe(), которому в качестве параметра должен быть передан массив из двух целых чисел. Элекмент массива с индексом 0 используется как файловый дескриптор для чтения, а элемент с индексом 1 используется для записи.
Пример:
int fd[2];
pipe(fd);

Таблица файловых дескрипторов наследуется дочерним процессом от родительского, поэтому процесс-ребенок может отправлять информацию через пайп лбюбому из своих предков, так же, как и читать информацию, отправленную ими в пайп.
Пайп существует до тех пор, пока хотя бы  один из его потоков не закрыт. Для этого нужно, чтобы каждый родственный процесс завершил работу или в процессе работы явно закрыл входной и выходной потоки.
